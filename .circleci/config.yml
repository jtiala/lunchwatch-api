version: 2

jobs:
  setup:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: Node version
          command: node -v
      - run:
          name: NPM version
          command: npm -v
      - run:
          name: Yarn version
          command: yarn -v
      - restore_cache:
          name: Restore cached dependencies
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Cache dependencies
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
  build:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run build
          command: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - dist
  test:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run tests
          command: yarn test
  lint:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run linters
          command: yarn lint
  deploy:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Deploy to DigitalOcean droplet
          command: ssh -o "StrictHostKeyChecking no" $DROPLET_USER@$DROPLET_IP "cd $DROPLET_PATH; git pull; yarn; yarn build; yarn migrate; yarn seed; NODE_ENV=production pm2 start dist/server.js --name=\"LunchWatch API\""
workflows:
  version: 2
  test_lint_build_deploy:
    jobs:
      - setup
      - test:
          requires:
            - setup
      - lint:
          requires:
            - setup
      - build:
          requires:
            - test
            - lint
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - build
